name: Build Container, Deploy on CINECA Cluster and Run
run-name: ${{ github.actor }} is deploying matrix multiplication on CINECA cluster...
on: 
  push:
    branches:
      - main


jobs:

  build-singularity-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Check Go is in cache
        uses: actions/cache@v4.0.2
        id: go_cache
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Set up Go iff not found in cache
        if: steps.go_cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.21.10'
          cache-dependency-path: |
              subdir/go.sum
              tools/go.sum
        id: go
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          autoconf \
          automake \
          cryptsetup \
          fuse \
          fuse2fs \
          git \
          libfuse-dev \
          libglib2.0-dev \
          libseccomp-dev \
          libtool \
          pkg-config \
          runc \
          squashfs-tools \
          squashfs-tools-ng \
          uidmap \
          wget \
          zlib1g-dev

      - name: Get and compile Singularity
        env:
          VERSION: 4.1.3
        run: |
          wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-ce_${VERSION}-jammy_amd64.deb
          sudo dpkg -i singularity-ce_${VERSION}-jammy_amd64.deb

      - name: Create the singularity container from the def file
        run: singularity build --fakeroot matrix-mult.sif Singularity

      - name: Upload container
        uses: actions/upload-artifact@v4.3.3
        with:
          name: singularity-container
          path: matrix-mult.sif
          if-no-files-found: error
          overwrite: true
          compression-level: 9



  deploy-container-to-cineca-cluster:
    needs: build-singularity-container
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The job is running on a ${{ runner.os }} server hosted by GitHub."

      - name: Checkout
        uses: actions/checkout@v2

      - name: Download container
        uses: actions/download-artifact@v4.1.7
        with:
          name: singularity-container


      - name: Prepare the zip file to send
        run: |
          sudo apt install zip && \
          zip -9 -r matrix_mult_exec.zip matrixA.txt matrixB.txt matrix-mult.sif 

      - name: Send files to the cluster
        env:
          SSH_CINECA_CLUSTER: ${{ secrets.CINECA_USERNAME }}@${{ secrets.CINECA_HOST }}
        run: |
          sudo apt install -y sshpass && \
          echo ${{ secrets.CINECA_PASSWORD }} > psw.txt && \
          sshpass -f ./psw.txt rsync -PravzHS -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" job.sh $SSH_CINECA_CLUSTER:.
          sshpass -f ./psw.txt rsync -PravzHS -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" matrix_mult_exec.zip $SSH_CINECA_CLUSTER:.






  run-container-in-cineca-cluster:
    needs: deploy-container-to-cineca-cluster
    runs-on: ubuntu-latest
    steps:
      - name: Run job
        env:
          SSH_CINECA_CLUSTER: ${{ secrets.CINECA_USERNAME }}@${{ secrets.CINECA_HOST }}
        run: |
          echo ${{ secrets.CINECA_PASSWORD }} > psw.txt
          sshpass -f ./psw.txt ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SSH_CINECA_CLUSTER 'unzip -o matrix_mult_exec.zip && rm matrix_mult_exec.zip && sbatch job.sh'

      - name: Get results from cluster
        env:
          SSH_CINECA_CLUSTER: ${{ secrets.CINECA_USERNAME }}@${{ secrets.CINECA_HOST }}
        run: |
          sleep 15
          sshpass -f ./psw.txt rsync -PravzHS -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" $SSH_CINECA_CLUSTER:output.log .
          sshpass -f ./psw.txt rsync -PravzHS -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" $SSH_CINECA_CLUSTER:errors.log .
      
      - name: Upload output log
        uses: actions/upload-artifact@v4.3.3
        with:
          name: output
          path: output.log

      - name: Upload errors log
        uses: actions/upload-artifact@v4.3.3
        with:
          name: errors
          path: errors.log

